{"ast":null,"code":"import _toConsumableArray from\"/Users/victorgaubin/Documents/MMi Cours/2/JS JM/todolist tp/todolist 2/todolistv2/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/victorgaubin/Documents/MMi Cours/2/JS JM/todolist tp/todolist 2/todolistv2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import'./App.css';import TodoForm from\"./components/TodoForm\";import TodoList from\"./components/TodoList\";import{saveToLocalStorage,loadFromLocalStorage}from'./StorageService';function App(props){var data=loadFromLocalStorage(props.storageKey);var _React$useState=React.useState(data),_React$useState2=_slicedToArray(_React$useState,2),taches=_React$useState2[0],setTaches=_React$useState2[1];function ajouterTache(nouvelleTache){if(nouvelleTache.intitule.trim()===''){return;// On s'arrête là\n}var stateTasks=[].concat(_toConsumableArray(taches),[nouvelleTache]);setTaches(stateTasks);saveToLocalStorage(props.storageKey,stateTasks);}function onCheck(tacheCliquee){setTaches(_toConsumableArray(taches));tacheCliquee.faite=!tacheCliquee.faite;saveToLocalStorage(props.storageKey,taches);}function onDelete(tacheADelete){var indice=taches.indexOf(tacheADelete);taches.splice(indice,1);setTaches(_toConsumableArray(taches));saveToLocalStorage(props.storageKey,taches);}var restantes=taches.filter(function(t){return t.faite===false;}).length;return React.createElement(\"div\",null,React.createElement(\"p\",null,restantes,\"/\",taches.length,\" t\\xE2ches restantes\"),React.createElement(TodoForm,{nouvelleTache:ajouterTache}),React.createElement(TodoList,{taches:taches,onCheck:onCheck,onDelete:onDelete}));}export default App;","map":{"version":3,"sources":["/Users/victorgaubin/Documents/MMi Cours/2/JS JM/todolist tp/todolist 2/todolistv2/src/App.jsx"],"names":["React","TodoForm","TodoList","saveToLocalStorage","loadFromLocalStorage","App","props","data","storageKey","useState","taches","setTaches","ajouterTache","nouvelleTache","intitule","trim","stateTasks","onCheck","tacheCliquee","faite","onDelete","tacheADelete","indice","indexOf","splice","restantes","filter","t","length"],"mappings":"gVAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,CACA,OAAQC,kBAAR,CAA4BC,oBAA5B,KAAsD,kBAAtD,CAEA,QAASC,CAAAA,GAAT,CAAaC,KAAb,CAAoB,CAEhB,GAAMC,CAAAA,IAAI,CAAGH,oBAAoB,CAACE,KAAK,CAACE,UAAP,CAAjC,CAFgB,oBAIYR,KAAK,CAACS,QAAN,CAAeF,IAAf,CAJZ,oDAITG,MAJS,qBAIDC,SAJC,qBAMhB,QAASC,CAAAA,YAAT,CAAsBC,aAAtB,CAAqC,CACjC,GAAIA,aAAa,CAACC,QAAd,CAAuBC,IAAvB,KAAkC,EAAtC,CAA0C,CACtC,OAAQ;AACX,CACD,GAAMC,CAAAA,UAAU,8BAAON,MAAP,GAAeG,aAAf,EAAhB,CACAF,SAAS,CAACK,UAAD,CAAT,CACAb,kBAAkB,CAACG,KAAK,CAACE,UAAP,CAAmBQ,UAAnB,CAAlB,CACH,CAED,QAASC,CAAAA,OAAT,CAAiBC,YAAjB,CAA+B,CAC3BP,SAAS,oBAAKD,MAAL,EAAT,CACAQ,YAAY,CAACC,KAAb,CAAqB,CAACD,YAAY,CAACC,KAAnC,CACAhB,kBAAkB,CAACG,KAAK,CAACE,UAAP,CAAmBE,MAAnB,CAAlB,CACH,CAED,QAASU,CAAAA,QAAT,CAAkBC,YAAlB,CAA+B,CAC3B,GAAIC,CAAAA,MAAM,CAAGZ,MAAM,CAACa,OAAP,CAAeF,YAAf,CAAb,CACAX,MAAM,CAACc,MAAP,CAAcF,MAAd,CAAsB,CAAtB,EACAX,SAAS,oBAAKD,MAAL,EAAT,CACAP,kBAAkB,CAACG,KAAK,CAACE,UAAP,CAAmBE,MAAnB,CAAlB,CACH,CAED,GAAMe,CAAAA,SAAS,CAAGf,MAAM,CAACgB,MAAP,CAAc,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACR,KAAF,GAAY,KAAhB,EAAf,EAAsCS,MAAxD,CAEA,MACI,gCAEI,6BAAIH,SAAJ,KAAgBf,MAAM,CAACkB,MAAvB,wBAFJ,CAII,oBAAC,QAAD,EAAU,aAAa,CAAEhB,YAAzB,EAJJ,CAKI,oBAAC,QAAD,EAAU,MAAM,CAAEF,MAAlB,CAA0B,OAAO,CAAEO,OAAnC,CAA4C,QAAQ,CAAEG,QAAtD,EALJ,CADJ,CASH,CAED,cAAef,CAAAA,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\nimport {saveToLocalStorage, loadFromLocalStorage}from './StorageService'\n\nfunction App(props) {\n\n    const data = loadFromLocalStorage(props.storageKey);\n\n    const [taches, setTaches] = React.useState(data);\n\n    function ajouterTache(nouvelleTache) {\n        if (nouvelleTache.intitule.trim() === '') {\n            return; // On s'arrête là\n        }\n        const stateTasks = [...taches, nouvelleTache];\n        setTaches(stateTasks);\n        saveToLocalStorage(props.storageKey, stateTasks);\n    }\n\n    function onCheck(tacheCliquee) {\n        setTaches([...taches]);\n        tacheCliquee.faite = !tacheCliquee.faite;\n        saveToLocalStorage(props.storageKey, taches);\n    }\n\n    function onDelete(tacheADelete){\n        let indice = taches.indexOf(tacheADelete);\n        taches.splice(indice, 1);\n        setTaches([...taches]);\n        saveToLocalStorage(props.storageKey, taches);\n    }\n\n    const restantes = taches.filter(t => t.faite === false).length;\n\n    return (\n        <div>\n  \n            <p>{restantes}/{taches.length} tâches restantes</p>\n                        \n            <TodoForm nouvelleTache={ajouterTache} />\n            <TodoList taches={taches} onCheck={onCheck} onDelete={onDelete} />\n        </div>\n    )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}