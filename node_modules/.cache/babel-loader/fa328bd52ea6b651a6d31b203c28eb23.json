{"ast":null,"code":"var _jsxFileName = \"/Users/victorgaubin/Documents/MMi Cours/2/JS JM/todolist tp/todolist 2/todolistv2/src/App.jsx\";\nimport React from 'react';\nimport './App.css';\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\nimport { saveToLocalStorage, loadFromLocalStorage } from './StorageService';\n\nfunction App() {\n  const data = loadFromLocalStorage;\n  const [taches, setTaches] = React.useState(data);\n\n  function ajouterTache(nouvelleTache) {\n    if (nouvelleTache.intitule.trim() === '') {\n      return; // On s'arrête là\n    }\n\n    const stateTasks = [...taches, nouvelleTache];\n    setTaches(stateTasks);\n    saveToLocalStorage(stateTasks);\n  }\n\n  function onCheck(tacheCliquee) {\n    setTaches([...taches]);\n    tacheCliquee.faite = !tacheCliquee.faite;\n    saveToLocalStorage(taches);\n  }\n\n  function onDelete(tacheADelete) {\n    let indice = taches.indexOf(tacheADelete);\n    taches.splice(indice, 1);\n    setTaches([...taches]);\n    saveToLocalStorage(taches);\n  }\n\n  const restantes = taches.filter(t => t.faite === false).length;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, restantes, \"/\", taches.length, \" t\\xE2ches restantes\"), React.createElement(TodoForm, {\n    nouvelleTache: ajouterTache,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(TodoList, {\n    taches: taches,\n    onCheck: onCheck,\n    onDelete: onDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/victorgaubin/Documents/MMi Cours/2/JS JM/todolist tp/todolist 2/todolistv2/src/App.jsx"],"names":["React","TodoForm","TodoList","saveToLocalStorage","loadFromLocalStorage","App","data","taches","setTaches","useState","ajouterTache","nouvelleTache","intitule","trim","stateTasks","onCheck","tacheCliquee","faite","onDelete","tacheADelete","indice","indexOf","splice","restantes","filter","t","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAAQC,kBAAR,EAA4BC,oBAA5B,QAAsD,kBAAtD;;AAEA,SAASC,GAAT,GAAe;AAEX,QAAMC,IAAI,GAAGF,oBAAb;AAEA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBR,KAAK,CAACS,QAAN,CAAeH,IAAf,CAA5B;;AAEA,WAASI,YAAT,CAAsBC,aAAtB,EAAqC;AACjC,QAAIA,aAAa,CAACC,QAAd,CAAuBC,IAAvB,OAAkC,EAAtC,EAA0C;AACtC,aADsC,CAC9B;AACX;;AACD,UAAMC,UAAU,GAAG,CAAC,GAAGP,MAAJ,EAAYI,aAAZ,CAAnB;AACAH,IAAAA,SAAS,CAACM,UAAD,CAAT;AACAX,IAAAA,kBAAkB,CAACW,UAAD,CAAlB;AACH;;AAED,WAASC,OAAT,CAAiBC,YAAjB,EAA+B;AAC3BR,IAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,CAAD,CAAT;AACAS,IAAAA,YAAY,CAACC,KAAb,GAAqB,CAACD,YAAY,CAACC,KAAnC;AACAd,IAAAA,kBAAkB,CAACI,MAAD,CAAlB;AACH;;AAED,WAASW,QAAT,CAAkBC,YAAlB,EAA+B;AAC3B,QAAIC,MAAM,GAAGb,MAAM,CAACc,OAAP,CAAeF,YAAf,CAAb;AACAZ,IAAAA,MAAM,CAACe,MAAP,CAAcF,MAAd,EAAsB,CAAtB;AACAZ,IAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,CAAD,CAAT;AACAJ,IAAAA,kBAAkB,CAACI,MAAD,CAAlB;AACH;;AAED,QAAMgB,SAAS,GAAGhB,MAAM,CAACiB,MAAP,CAAcC,CAAC,IAAIA,CAAC,CAACR,KAAF,KAAY,KAA/B,EAAsCS,MAAxD;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,SAAJ,OAAgBhB,MAAM,CAACmB,MAAvB,yBAFJ,EAII,oBAAC,QAAD;AAAU,IAAA,aAAa,EAAEhB,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEH,MAAlB;AAA0B,IAAA,OAAO,EAAEQ,OAAnC;AAA4C,IAAA,QAAQ,EAAEG,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AASH;;AAED,eAAeb,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\nimport {saveToLocalStorage, loadFromLocalStorage}from './StorageService'\n\nfunction App() {\n\n    const data = loadFromLocalStorage;\n\n    const [taches, setTaches] = React.useState(data);\n\n    function ajouterTache(nouvelleTache) {\n        if (nouvelleTache.intitule.trim() === '') {\n            return; // On s'arrête là\n        }\n        const stateTasks = [...taches, nouvelleTache];\n        setTaches(stateTasks);\n        saveToLocalStorage(stateTasks);\n    }\n\n    function onCheck(tacheCliquee) {\n        setTaches([...taches]);\n        tacheCliquee.faite = !tacheCliquee.faite;\n        saveToLocalStorage(taches);\n    }\n\n    function onDelete(tacheADelete){\n        let indice = taches.indexOf(tacheADelete);\n        taches.splice(indice, 1);\n        setTaches([...taches]);\n        saveToLocalStorage(taches);\n    }\n\n    const restantes = taches.filter(t => t.faite === false).length;\n\n    return (\n        <div>\n  \n            <p>{restantes}/{taches.length} tâches restantes</p>\n                        \n            <TodoForm nouvelleTache={ajouterTache} />\n            <TodoList taches={taches} onCheck={onCheck} onDelete={onDelete} />\n        </div>\n    )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}